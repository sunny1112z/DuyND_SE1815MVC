@model IEnumerable<DuyND_SE1815_Data.Entities.Category>

@{
    ViewData["Title"] = "Category List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- Tải jQuery trước để tránh lỗi -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<div class="container mt-4">
    <h1 class="mb-4 text-primary text-center">Category List</h1>

    <div class="d-flex justify-content-between align-items-center mb-3">
        <button class="btn btn-success shadow" onclick="openCreateModal()">
            <i class="bi bi-plus-lg"></i> Create New
        </button>
    </div>

    <div class="table-responsive">
        <table class="table table-hover table-bordered text-center align-middle">
            <thead class="table-dark">
                <tr>
                    <th>Category Name</th>
                    <th>Description</th>
                    <th>Status</th>
                    <th>Parent Category</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@Html.DisplayFor(modelItem => item.CategoryName)</td>
                        <td class="text-start">
                            <div class="desc-container text-truncate" style="max-width: 250px;" title="@item.CategoryDesciption">
                                @item.CategoryDesciption
                            </div>
                            @if (!string.IsNullOrEmpty(item.CategoryDesciption) && item.CategoryDesciption.Length > 30)
                            {
                                <button class="btn btn-link btn-sm p-0 text-primary toggle-btn">Xem thêm</button>
                            }
                        </td>
                        <td>
                            <span class="badge @(item.IsActive == true ? "bg-success" : "bg-danger")">
                                @(item.IsActive == true? "Active" : "Inactive")
                            </span>
                        </td>
                        <td class="text-start">
                            <div class="parent-container text-truncate" style="max-width: 250px;" title="@(item.ParentCategory?.CategoryDesciption ?? "None")">
                                @(item.ParentCategory != null ? item.ParentCategory.CategoryDesciption : "None")
                            </div>
                            @if (item.ParentCategory != null && item.ParentCategory.CategoryDesciption.Length > 30)
                            {
                                <button class="btn btn-link btn-sm p-0 text-primary toggle-btn">Xem thêm</button>
                            }
                        </td>
                        <td class="text-center">
                            <div class="btn-group gap-2">
                                <button class="btn btn-warning btn-sm shadow-sm" onclick="openEditModal(@item.CategoryId)">
                                    <i class="bi bi-pencil-square"></i> Edit
                                </button>
                                <a asp-action="Details" asp-route-id="@item.CategoryId" class="btn btn-info btn-sm shadow-sm">
                                    <i class="bi bi-eye"></i> Details
                                </a>
                                <form asp-action="Delete" asp-route-id="@item.CategoryId" method="post" style="display:inline;"
                                      onsubmit="return confirm('Are you sure you want to delete this category?');">
                                    <button type="submit" class="btn btn-danger btn-sm shadow-sm">
                                        <i class="bi bi-trash"></i> Delete
                                    </button>
                                </form>

                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<!-- Modal Edit -->
<div id="editModal" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit Category</h5>
                <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            <div class="modal-body">
                <form id="editForm" enctype="multipart/form-data">
                    <input type="hidden" name="CategoryId" id="editCategoryId" />

                    <div class="mb-3">
                        <label class="form-label fw-bold">Category Name</label>
                        <input type="text" class="form-control" name="CategoryName" required />
                    </div>

                    <div class="mb-3">
                        <label class="form-label fw-bold">Description</label>
                        <textarea class="form-control" name="CategoryDesciption" rows="3"></textarea>
                    </div>

                    <div class="mb-3">
                        <label class="form-label fw-bold">Status</label>
                        <select class="form-select" name="IsActive">
                            <option value="true">Active</option>
                            <option value="false">Inactive</option>
                        </select>
                    </div>

                    <div class="d-flex justify-content-end gap-2">
                        <button type="submit" class="btn btn-primary">
                            <i class="bi bi-save"></i> Save
                        </button>
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                            <i class="bi bi-x-circle"></i> Close
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
<!-- Modal Create -->

<div id="createModal" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Create New Category</h5>
                <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            <div class="modal-body">
                <form id="createForm">
                    <div class="mb-3">
                        <label class="form-label fw-bold">Category Name</label>
                        <input type="text" class="form-control" name="CategoryName" required />
                    </div>

                    <div class="mb-3">
                        <label class="form-label fw-bold">Description</label>
                        <textarea class="form-control" name="CategoryDesciption" rows="3"></textarea>
                    </div>

                    <div class="mb-3">
                        <label class="form-label fw-bold">Status</label>
                        <select class="form-select" name="IsActive">
                            <option value="true">Active</option>
                            <option value="false">Inactive</option>
                        </select>
                    </div>

                    <div class="mb-3">
                        <label class="form-label fw-bold">Parent Category</label>
                        <select class="form-select" name="ParentCategoryId" id="parentCategoryDropdown">
                            <option value="">None</option>
                        </select>
                    </div>

                    <div class="d-flex justify-content-end gap-2">
                        <button type="submit" class="btn btn-success">
                            <i class="bi bi-plus-circle"></i> Create
                        </button>
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                            <i class="bi bi-x-circle"></i> Close
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>


<script>
    function openEditModal(categoryId) {
        console.log("Editing Category ID:", categoryId);

        $.ajax({
            url: `/Category/GetCategory/${categoryId}`,
            type: "GET",
            success: function (category) {
                console.log("Response từ API:", category);

                if (category) {
                    $("#editCategoryId").val(category.categoryId);
                    $("#editForm input[name='CategoryName']").val(category.categoryName);
                    $("#editForm textarea[name='CategoryDesciption']").val(category.categoryDesciption);
                    $("#editForm select[name='IsActive']").val(category.isActive.toString());

                    var myModal = new bootstrap.Modal(document.getElementById("editModal"));
                    myModal.show();
                }
            },
            error: function (err) {
                console.error("Lỗi khi lấy dữ liệu danh mục:", err);
            }
        });
    }

    $(document).on("submit", "#editForm", function (e) {
        e.preventDefault();

        console.log("Form submitted");

        var formData = new FormData(this);
        $.ajax({
            url: `/Category/Edit`,
            type: "POST",
            data: formData,
            contentType: false,
            processData: false,
            success: function (response) {
                alert("Cập nhật danh mục thành công!");
                location.reload();
            },
            error: function (err) {
                alert("Cập nhật thất bại, vui lòng thử lại!");
                console.error("Lỗi khi cập nhật danh mục:", err);
            }
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        document.querySelectorAll(".toggle-btn").forEach(function (btn) {
            btn.addEventListener("click", function () {
                var container = this.previousElementSibling;
                if (container.classList.contains("text-truncate")) {
                    container.classList.remove("text-truncate");
                    this.textContent = "Thu gọn";
                } else {
                    container.classList.add("text-truncate");
                    this.textContent = "Xem thêm";
                }
            });
        });
    });
</script>
<script>
    function openCreateModal() {
        $.ajax({
            url: "/Category/GetAllCategories",
            type: "GET",
            success: function (categories) {
                let dropdown = $("#parentCategoryDropdown");
                dropdown.empty();
                dropdown.append('<option value="">None</option>');

                categories.forEach(category => {
                    dropdown.append(`<option value="${category.categoryId}">${category.categoryName}</option>`);
                });

                var myModal = new bootstrap.Modal(document.getElementById("createModal"));
                myModal.show();
            },
            error: function (err) {
                console.error("Lỗi khi lấy danh sách danh mục:", err);
            }
        });
    }

    $(document).on("submit", "#createForm", function (e) {
        e.preventDefault();

        var formData = new FormData(this);
        $.ajax({
            url: "/Category/Create",
            type: "POST",
            data: formData,
            contentType: false,
            processData: false,
            success: function (response) {
                alert("Danh mục đã được tạo thành công!");
                location.reload();
            },
            error: function (err) {
                alert("Lỗi khi tạo danh mục, vui lòng thử lại!");
                console.error("Lỗi khi tạo danh mục:", err);
            }
        });
    });
</script>
